spring.application.name: spring-security-oauth2

server:
  port: 8081

spring:
  mvc:
    static-path-pattern: /static/**
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: [구글 클라이언트 id]
            clientSecret: [구글 클라이언트 secret]
            redirectUri: http://localhost:8081/login/oauth2/code/google
            scope: openid,profile,email
          naver:
            clientId: [네이버 클라이언트 id]
            clientSecret: [네이버 클라이언트 secret]
            redirectUri: http://localhost:8081/login/oauth2/code/naver
            authorizationGrantType: authorization_code
            scope: profile,email
          keycloak:
            clientId: oauth2-client-app
            clientSecret: 1tIeERcVJnWNmVZIEFA7Ao5YkTIbx83w
            clientName: oauth2-client-app
            authorizationGrantType: authorization_code
            redirectUri: http://localhost:8081/login/oauth2/code/keycloak
            scope: openid,profile,email
        provider:
          keycloak:
            issuerUri: http://localhost:8080/realms/oauth2
            authorizationUri: http://localhost:8080/realms/oauth2/protocol/openid-connect/auth
            tokenUri: http://localhost:8080/realms/oauth2/protocol/openid-connect/token
            jwkSetUri: http://localhost:8080/realms/oauth2/protocol/openid-connect/certs
            userInfoUri: http://localhost:8080/realms/oauth2/protocol/openid-connect/userinfo
            userNameAttribute: preferred_username
          naver:
            authorizationUri: https://nid.naver.com/oauth2.0/authorize
            tokenUri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response
